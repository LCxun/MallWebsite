{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport shallowEqual from \"rc-util/es/isEqual\";\nimport * as React from 'react';\nimport { formatValue, isEqual } from \"../utils/dateUtil\";\nexport default function useValueTexts(value, _ref) {\n  var formatList = _ref.formatList,\n      generateConfig = _ref.generateConfig,\n      locale = _ref.locale;\n\n  var _useMemo = useMemo(function () {\n    if (!value) {\n      return [[''], ''];\n    } // We will convert data format back to first format\n\n\n    var firstValueText = '';\n    var fullValueTexts = [];\n\n    for (var i = 0; i < formatList.length; i += 1) {\n      var format = formatList[i];\n      var formatStr = formatValue(value, {\n        generateConfig: generateConfig,\n        locale: locale,\n        format: format\n      });\n      fullValueTexts.push(formatStr);\n\n      if (i === 0) {\n        firstValueText = formatStr;\n      }\n    }\n\n    return [fullValueTexts, firstValueText];\n  }, [value, formatList, locale], function (prev, next) {\n    return (// Not Same Date\n      !isEqual(generateConfig, prev[0], next[0]) || // Not Same format\n      !shallowEqual(prev[1], next[1], true) || // Not Same locale\n      !shallowEqual(prev[2], next[2], true)\n    );\n  }),\n      _useMemo2 = _slicedToArray(_useMemo, 2),\n      texts = _useMemo2[0],\n      text = _useMemo2[1];\n\n  return React.useMemo(function () {\n    return [texts, text];\n  }, [texts.join(''), text]);\n}","map":{"version":3,"names":["_slicedToArray","useMemo","shallowEqual","React","formatValue","isEqual","useValueTexts","value","_ref","formatList","generateConfig","locale","_useMemo","firstValueText","fullValueTexts","i","length","format","formatStr","push","prev","next","_useMemo2","texts","text","join"],"sources":["C:/Users/LC/Desktop/Mall/frontend/node_modules/rc-picker/es/hooks/useValueTexts.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport shallowEqual from \"rc-util/es/isEqual\";\nimport * as React from 'react';\nimport { formatValue, isEqual } from \"../utils/dateUtil\";\nexport default function useValueTexts(value, _ref) {\n  var formatList = _ref.formatList,\n    generateConfig = _ref.generateConfig,\n    locale = _ref.locale;\n  var _useMemo = useMemo(function () {\n      if (!value) {\n        return [[''], ''];\n      }\n\n      // We will convert data format back to first format\n      var firstValueText = '';\n      var fullValueTexts = [];\n      for (var i = 0; i < formatList.length; i += 1) {\n        var format = formatList[i];\n        var formatStr = formatValue(value, {\n          generateConfig: generateConfig,\n          locale: locale,\n          format: format\n        });\n        fullValueTexts.push(formatStr);\n        if (i === 0) {\n          firstValueText = formatStr;\n        }\n      }\n      return [fullValueTexts, firstValueText];\n    }, [value, formatList, locale], function (prev, next) {\n      return (\n        // Not Same Date\n        !isEqual(generateConfig, prev[0], next[0]) ||\n        // Not Same format\n        !shallowEqual(prev[1], next[1], true) ||\n        // Not Same locale\n        !shallowEqual(prev[2], next[2], true)\n      );\n    }),\n    _useMemo2 = _slicedToArray(_useMemo, 2),\n    texts = _useMemo2[0],\n    text = _useMemo2[1];\n  return React.useMemo(function () {\n    return [texts, text];\n  }, [texts.join(''), text]);\n}"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,mBAArC;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;EACjD,IAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB;EAAA,IACEC,cAAc,GAAGF,IAAI,CAACE,cADxB;EAAA,IAEEC,MAAM,GAAGH,IAAI,CAACG,MAFhB;;EAGA,IAAIC,QAAQ,GAAGX,OAAO,CAAC,YAAY;IAC/B,IAAI,CAACM,KAAL,EAAY;MACV,OAAO,CAAC,CAAC,EAAD,CAAD,EAAO,EAAP,CAAP;IACD,CAH8B,CAK/B;;;IACA,IAAIM,cAAc,GAAG,EAArB;IACA,IAAIC,cAAc,GAAG,EAArB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,UAAU,CAACO,MAA/B,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;MAC7C,IAAIE,MAAM,GAAGR,UAAU,CAACM,CAAD,CAAvB;MACA,IAAIG,SAAS,GAAGd,WAAW,CAACG,KAAD,EAAQ;QACjCG,cAAc,EAAEA,cADiB;QAEjCC,MAAM,EAAEA,MAFyB;QAGjCM,MAAM,EAAEA;MAHyB,CAAR,CAA3B;MAKAH,cAAc,CAACK,IAAf,CAAoBD,SAApB;;MACA,IAAIH,CAAC,KAAK,CAAV,EAAa;QACXF,cAAc,GAAGK,SAAjB;MACD;IACF;;IACD,OAAO,CAACJ,cAAD,EAAiBD,cAAjB,CAAP;EACD,CArBmB,EAqBjB,CAACN,KAAD,EAAQE,UAAR,EAAoBE,MAApB,CArBiB,EAqBY,UAAUS,IAAV,EAAgBC,IAAhB,EAAsB;IACpD,OACE;MACA,CAAChB,OAAO,CAACK,cAAD,EAAiBU,IAAI,CAAC,CAAD,CAArB,EAA0BC,IAAI,CAAC,CAAD,CAA9B,CAAR,IACA;MACA,CAACnB,YAAY,CAACkB,IAAI,CAAC,CAAD,CAAL,EAAUC,IAAI,CAAC,CAAD,CAAd,EAAmB,IAAnB,CAFb,IAGA;MACA,CAACnB,YAAY,CAACkB,IAAI,CAAC,CAAD,CAAL,EAAUC,IAAI,CAAC,CAAD,CAAd,EAAmB,IAAnB;IANf;EAQD,CA9BmB,CAAtB;EAAA,IA+BEC,SAAS,GAAGtB,cAAc,CAACY,QAAD,EAAW,CAAX,CA/B5B;EAAA,IAgCEW,KAAK,GAAGD,SAAS,CAAC,CAAD,CAhCnB;EAAA,IAiCEE,IAAI,GAAGF,SAAS,CAAC,CAAD,CAjClB;;EAkCA,OAAOnB,KAAK,CAACF,OAAN,CAAc,YAAY;IAC/B,OAAO,CAACsB,KAAD,EAAQC,IAAR,CAAP;EACD,CAFM,EAEJ,CAACD,KAAK,CAACE,IAAN,CAAW,EAAX,CAAD,EAAiBD,IAAjB,CAFI,CAAP;AAGD"},"metadata":{},"sourceType":"module"}