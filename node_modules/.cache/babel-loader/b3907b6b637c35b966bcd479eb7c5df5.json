{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  cartItems: [],\n  totalAmount: 0,\n  totalQuantity: 0,\n  userName: ''\n};\nconst cartSlice = createSlice({\n  // 用来自动生成action中的type\n  name: 'cart',\n  // state的初始值  initialState:initialState 可以简写\n  initialState,\n  reducers: {\n    // 指定state的各种操作，直接添加方法\n    // 通过不同的方法来指定对state的不同操作\n    // 两个参数:state,action\n    addItem: (state, action) => {\n      const newItem = action.payload; // console.log(newItem);\n\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.cartItems.push({\n          id: newItem.id,\n          productName: newItem.productName,\n          imgUrl: newItem.imgUrl,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrcie = Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0); // console.log(state.totalQuantity);\n      // console.log(state.cartItems);\n      // console.log(newItem);\n    },\n    deleteItem: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    },\n    showUserName: (state, action) => {\n      // console.log(action.payload);\n      state.userName = action.payload;\n      localStorage.setItem('userName', JSON.stringify(state.userName));\n    }\n  }\n}); // Slice会自动帮我们生成action\n// action对象的结构 {type:cart/函数名,payload:函数的参数}\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalAmount","totalQuantity","userName","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","productName","imgUrl","price","quantity","totalPrice","totalPrcie","Number","reduce","total","deleteItem","filter","showUserName","localStorage","setItem","JSON","stringify","cartActions","actions","reducer"],"sources":["C:/Users/LC/Desktop/Mall/frontend/src/redux/slices/cartSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    totalAmount: 0,\r\n    totalQuantity: 0,\r\n    userName:''\r\n}\r\n\r\nconst cartSlice = createSlice({\r\n    // 用来自动生成action中的type\r\n    name: 'cart',\r\n    // state的初始值  initialState:initialState 可以简写\r\n    initialState,\r\n    reducers: { // 指定state的各种操作，直接添加方法\r\n        // 通过不同的方法来指定对state的不同操作\r\n        // 两个参数:state,action\r\n        addItem: (state, action) => {\r\n\r\n            const newItem = action.payload\r\n            // console.log(newItem);\r\n            \r\n            const existingItem = state.cartItems.find(item => item.id === newItem.id)\r\n            \r\n\r\n            state.totalQuantity++\r\n            if (!existingItem) {\r\n                state.cartItems.push({\r\n                    id: newItem.id,\r\n                    productName: newItem.productName,\r\n                    imgUrl: newItem.imgUrl,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n\r\n                })\r\n            } else {\r\n                existingItem.quantity++\r\n                existingItem.totalPrcie = Number(existingItem.totalPrice) + Number(newItem.price)\r\n            }\r\n            state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0)\r\n            \r\n            // console.log(state.totalQuantity);\r\n            // console.log(state.cartItems);\r\n            // console.log(newItem);\r\n        },\r\n        deleteItem: (state, action) => {\r\n            const id = action.payload\r\n            const existingItem = state.cartItems.find(item => item.id === id)\r\n\r\n            if (existingItem) {\r\n                state.cartItems = state.cartItems.filter(item => item.id !== id)\r\n                state.totalQuantity = state.totalQuantity - existingItem.quantity\r\n            }\r\n            state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0)\r\n        },\r\n        showUserName:(state,action) => {\r\n            // console.log(action.payload);\r\n            state.userName = action.payload\r\n            localStorage.setItem('userName',JSON.stringify(state.userName))\r\n        }\r\n\r\n    },\r\n\r\n});\r\n\r\n// Slice会自动帮我们生成action\r\n// action对象的结构 {type:cart/函数名,payload:函数的参数}\r\nexport const cartActions = cartSlice.actions\r\n\r\nexport default cartSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}